" Vim syntax file generated by fds_make_syn.pl
" Vim Syntax file generated for FDS version:
"    1bd4777a12 Merge pull request #15118 from mcgratta/master


"--------------------------------------------------
" Language:     fds v. 4,5,6,7 input files
" Maintainer:   Andrew Louie <andrew.louie@wsp.com>
" Last change:  Sept 13, 2025
" Updated(2018-06-29):
" Will find all source files with NAMELIST keywords
" Updated(2016-08-12):
" Now pulls from Git instead of SVN
" Updated(2012-08-21):
" Now Reads hvac.f90 to highlight hvac keywords
" -------------------------------------------------
" TO USE:                                          
" copy fds.vim to $HOME/vimfiles/syntax
" add the following line to the $HOME/vimfiles/filetype.vim
" augroup filetypedetect
" au BufNewFile,BufRead *.fds setf fds
" augroup END
" -------------------------------------------------
" fds4 reads files that end in *.data
" fds5 reads files of any ext, but normally used .fds or .fds5
" For version 5.x: Clear all syntax items
" For version 7.x: Quit when a syntax file was already loaded
if version < 700
syntax clear
elseif exists("b:current_syntax")
  finish
endif

syn case match

"set unusal keywords
setlocal iskeyword+=_

" keywords NAMELIST Parameters
"
" Obselete NAMELIST-Keywords from FDS4
syn keyword FDS4OBS HEAT PIPE PL3D SMOD SPRK THCP GRID PDIM

syn match hBool /\(\.TRUE\.\)\|\(\.FALSE\.\)/ contained

"Numbers of various sorts, Copied the Fortran syntax file

" Integers
syn match FDSInterger	display "\<\d\+\(_\a\w*\)\=\>"
" floating point number, without a decimal point
syn match FDSFloat	display	"\<\d\+[deEq][-+]\=\d\+\(_\a\w*\)\=\>"
" floating point number, starting with a decimal point
syn match FDSNumber 	display "\<\.\d\+\([deEq][-+]\=\d\+\)\=\(_\a\w*\)\=\>"
" floating point number, no digits after decimal
syn match FDSNumber	display "\<\d\+\.\([deEq][-+]\=\d\+\)\=\(_\a\w*\)\=\>"
" floating point number, D or Q exponents
syn match FDSNumber	display	"\<\d\+\.\d\+\([dq][-+]\=\d\+\)\=\(_\a\w*\)\=\>"
" floating point number
syn match FDSNumber	display	"\<\d\+\.\d\+\(eE[-+]\=\d\+\)\=\(_\a\w*\)\=\>"

syn match FDSOperator	"\(\(>\|<\)=\=\|==\|/=\|=\)"

" strings, enclosed in single or double quotes
syntax region hString start=/"\|'/ end=/"\|'/ contained

" instructions - Anything that begins with & and end with /
syn region instructions start=/^\s*&/ end=/[/]/ contains=FDS4OBS,hstring,FDS5PA,NAMELIST,FDSNumber,FDSFloat,FDSInterger,FDSOperator,hBool contained

" comments: everything is a comment, unless it is an instruction, see above
syn match  comment /.*/ contains=instructions

" syntax sync
syntax sync minlines=150
syn case match

" Define the default highlighting.
" For version 5.7 and earlier: only when not done already
" For version 5.8 and later: only when an item doesn't have highlighting yet
if version >= 508 || !exists("did_blank_syntax_inits")
  if version < 508
    let did_blank_syntax_inits = 1
    command -nargs=+ HiLink hi link <args>
  else
    command -nargs=+ HiLink hi def link <args>
  endif

  HiLink FDS4OBS		Error
  HiLink instructions		Statement
  HiLink FDSNumber 		Number
  HiLink FDSInterger		Number
  HiLink FDSFloat		Number
  HiLink hBool			Boolean
  HiLink comment		Comment
  HiLink hString		String
  HiLink FDS5PA			Identifier
  HiLink NAMELIST		PreProc
  HiLink FDSOperator	        Operator

  delcommand HiLink
endif
let b:current_syntax = "fds"
" vim: ts=8
